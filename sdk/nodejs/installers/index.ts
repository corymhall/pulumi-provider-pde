// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GitHubReleaseArgs } from "./gitHubRelease";
export type GitHubRelease = import("./gitHubRelease").GitHubRelease;
export const GitHubRelease: typeof import("./gitHubRelease").GitHubRelease = null as any;
utilities.lazyLoad(exports, ["GitHubRelease"], () => require("./gitHubRelease"));

export { GitHubRepoArgs } from "./gitHubRepo";
export type GitHubRepo = import("./gitHubRepo").GitHubRepo;
export const GitHubRepo: typeof import("./gitHubRepo").GitHubRepo = null as any;
utilities.lazyLoad(exports, ["GitHubRepo"], () => require("./gitHubRepo"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "pde:installers:GitHubRelease":
                return new GitHubRelease(name, <any>undefined, { urn })
            case "pde:installers:GitHubRepo":
                return new GitHubRepo(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("pde", "installers", _module)
